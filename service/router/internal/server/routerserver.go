// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: router.proto

package server

import (
	"context"

	"github.com/Qsgs-Fans/freekill-server/service/router/internal/logic"
	"github.com/Qsgs-Fans/freekill-server/service/router/internal/svc"
	"github.com/Qsgs-Fans/freekill-server/service/router/router"
)

type RouterServer struct {
	svcCtx *svc.ServiceContext
	router.UnimplementedRouterServer
}

func NewRouterServer(svcCtx *svc.ServiceContext) *RouterServer {
	return &RouterServer{
		svcCtx: svcCtx,
	}
}

func (s *RouterServer) NotifyClient(ctx context.Context, in *router.Packet) (*router.RouterEmpty, error) {
	l := logic.NewNotifyClientLogic(ctx, s.svcCtx)
	return l.NotifyClient(in)
}

func (s *RouterServer) RequestClient(ctx context.Context, in *router.RequestPacket) (*router.RouterEmpty, error) {
	l := logic.NewRequestClientLogic(ctx, s.svcCtx)
	return l.RequestClient(in)
}
