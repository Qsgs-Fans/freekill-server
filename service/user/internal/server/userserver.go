// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package server

import (
	"context"

	"github.com/Qsgs-Fans/freekill-server/service/user/internal/logic"
	"github.com/Qsgs-Fans/freekill-server/service/user/internal/svc"
	"github.com/Qsgs-Fans/freekill-server/service/user/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) NewConn(ctx context.Context, in *user.ConnIdMsg) (*user.UserEmpty, error) {
	l := logic.NewNewConnLogic(ctx, s.svcCtx)
	return l.NewConn(in)
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginReply, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) Logout(ctx context.Context, in *user.ConnIdMsg) (*user.UserEmpty, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}
