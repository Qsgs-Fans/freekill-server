// 主要任务是把客户端的包解析后Rpc方式发给其他服务

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/router.proto

package router

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Packet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // JSON string
	ConnectionId  string                 `protobuf:"bytes,3,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_proto_router_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_router_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_proto_router_proto_rawDescGZIP(), []int{0}
}

func (x *Packet) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Packet) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *Packet) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type RouterEmpty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouterEmpty) Reset() {
	*x = RouterEmpty{}
	mi := &file_proto_router_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterEmpty) ProtoMessage() {}

func (x *RouterEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_router_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterEmpty.ProtoReflect.Descriptor instead.
func (*RouterEmpty) Descriptor() ([]byte, []int) {
	return file_proto_router_proto_rawDescGZIP(), []int{1}
}

type RequestPacket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       string                 `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // JSON string
	Timeout       int32                  `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ConnectionId  string                 `protobuf:"bytes,5,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestPacket) Reset() {
	*x = RequestPacket{}
	mi := &file_proto_router_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPacket) ProtoMessage() {}

func (x *RequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_router_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPacket.ProtoReflect.Descriptor instead.
func (*RequestPacket) Descriptor() ([]byte, []int) {
	return file_proto_router_proto_rawDescGZIP(), []int{2}
}

func (x *RequestPacket) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *RequestPacket) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RequestPacket) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *RequestPacket) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RequestPacket) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

var File_proto_router_proto protoreflect.FileDescriptor

const file_proto_router_proto_rawDesc = "" +
	"\n" +
	"\x12proto/router.proto\"Z\n" +
	"\x06Packet\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\x12\"\n" +
	"\fconnectionId\x18\x03 \x01(\tR\fconnectionId\"\r\n" +
	"\vRouterEmpty\"\x99\x01\n" +
	"\rRequestPacket\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x05R\atimeout\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\"\n" +
	"\fconnectionId\x18\x05 \x01(\tR\fconnectionId2^\n" +
	"\x06Router\x12%\n" +
	"\fnotifyClient\x12\a.Packet\x1a\f.RouterEmpty\x12-\n" +
	"\rrequestClient\x12\x0e.RequestPacket\x1a\f.RouterEmptyB\n" +
	"Z\b./routerb\x06proto3"

var (
	file_proto_router_proto_rawDescOnce sync.Once
	file_proto_router_proto_rawDescData []byte
)

func file_proto_router_proto_rawDescGZIP() []byte {
	file_proto_router_proto_rawDescOnce.Do(func() {
		file_proto_router_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_router_proto_rawDesc), len(file_proto_router_proto_rawDesc)))
	})
	return file_proto_router_proto_rawDescData
}

var file_proto_router_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_router_proto_goTypes = []any{
	(*Packet)(nil),        // 0: Packet
	(*RouterEmpty)(nil),   // 1: RouterEmpty
	(*RequestPacket)(nil), // 2: RequestPacket
}
var file_proto_router_proto_depIdxs = []int32{
	0, // 0: Router.notifyClient:input_type -> Packet
	2, // 1: Router.requestClient:input_type -> RequestPacket
	1, // 2: Router.notifyClient:output_type -> RouterEmpty
	1, // 3: Router.requestClient:output_type -> RouterEmpty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_router_proto_init() }
func file_proto_router_proto_init() {
	if File_proto_router_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_router_proto_rawDesc), len(file_proto_router_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_router_proto_goTypes,
		DependencyIndexes: file_proto_router_proto_depIdxs,
		MessageInfos:      file_proto_router_proto_msgTypes,
	}.Build()
	File_proto_router_proto = out.File
	file_proto_router_proto_goTypes = nil
	file_proto_router_proto_depIdxs = nil
}
